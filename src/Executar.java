
import java.awt.Color;
import java.awt.Toolkit;
import java.io.File;
import java.io.IOException;
import java.util.StringTokenizer;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author u4239
 */
public class Executar extends javax.swing.JFrame {

    private String linhaComando = "";
    private String linhaComandoDump = "";
    private int count;
    private final String endInicial = "C:\\Users\\u4239\\Desktop";
    private final String endMagmaProjeto = "C:\\Users\\u1611\\MAGMAprojects";
    DefaultTableModel model;

    /**
     * Creates new form Executar
     */
    public Executar() {
        initComponents();
        
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("icon.png")));
        
        model = (DefaultTableModel) tabela.getModel();
        count = 0;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtEndExeMagma = new javax.swing.JTextField();
        txtEndProjeto = new javax.swing.JTextField();
        btnLimpar = new javax.swing.JButton();
        btnSalvar = new javax.swing.JButton();
        btnExecutar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabela = new javax.swing.JTable();
        btnAdd = new javax.swing.JButton();
        btnExcolherPasta = new javax.swing.JButton();
        btnUp = new javax.swing.JButton();
        btnDown = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        txtLocalSalvar = new javax.swing.JTextField();
        btnExcolherPasta1 = new javax.swing.JButton();
        cbDump = new javax.swing.JCheckBox();
        jLabel4 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Simulação em fila Magma");
        setResizable(false);

        jLabel1.setText("Endereço de instalação Magma:");

        jLabel2.setText("Endereço do projeto:");

        txtEndExeMagma.setText(" C:\\MAGMA5\\v5.1.0\\WIN64_XP\\bin\\ms");

        btnLimpar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/del.png"))); // NOI18N
        btnLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimparActionPerformed(evt);
            }
        });

        btnSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/save.png"))); // NOI18N
        btnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarActionPerformed(evt);
            }
        });

        btnExecutar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/exec.png"))); // NOI18N
        btnExecutar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExecutarActionPerformed(evt);
            }
        });

        tabela.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Projetos na fila"
            }
        ));
        jScrollPane1.setViewportView(tabela);

        btnAdd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/add.png"))); // NOI18N
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnExcolherPasta.setIcon(new javax.swing.ImageIcon(getClass().getResource("/search.png"))); // NOI18N
        btnExcolherPasta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcolherPastaActionPerformed(evt);
            }
        });

        btnUp.setIcon(new javax.swing.ImageIcon(getClass().getResource("/up.png"))); // NOI18N
        btnUp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpActionPerformed(evt);
            }
        });

        btnDown.setIcon(new javax.swing.ImageIcon(getClass().getResource("/down.png"))); // NOI18N
        btnDown.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDownActionPerformed(evt);
            }
        });

        jLabel3.setText("Salvar em:");

        txtLocalSalvar.setText("C:\\\\Users\\\\u1611\\\\Desktop");

        btnExcolherPasta1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/search.png"))); // NOI18N
        btnExcolherPasta1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcolherPasta1ActionPerformed(evt);
            }
        });

        cbDump.setText("Criar arquivo Dump'Stop");

        jLabel4.setFont(new java.awt.Font("Traditional Arabic", 1, 24)); // NOI18N
        jLabel4.setText("Simulação em fila Magma");

        jMenu1.setText("Arquivo");

        jMenuItem1.setText("Sobre");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtEndProjeto))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addComponent(jLabel3)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtLocalSalvar))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel4)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel1)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(txtEndExeMagma, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGap(0, 0, Short.MAX_VALUE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnExcolherPasta1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnExcolherPasta, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(14, 14, 14))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(btnUp, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnDown, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cbDump)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btnSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btnExecutar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btnLimpar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(539, 539, 539)))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnExcolherPasta, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel1)
                                    .addComponent(txtEndExeMagma, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtLocalSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel3)))
                            .addComponent(btnExcolherPasta1))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtEndProjeto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cbDump)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(btnAdd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnSalvar))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(btnExecutar, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(btnLimpar, javax.swing.GroupLayout.Alignment.TRAILING)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnUp, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnDown, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(35, 35, 35))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarActionPerformed
        // TODO add your handling code here:

        if (tabela.getSize().height == 0 || tabela.getSize().width == 0) {
            JOptionPane.showMessageDialog(this, "Nenhum projeto na tabela foi encontrado !", "Erro", JOptionPane.ERROR_MESSAGE);
        } else {
            salvar();
        }


    }//GEN-LAST:event_btnSalvarActionPerformed

    private void btnExecutarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExecutarActionPerformed
        // TODO add your handling code here:  

        try {

            String endArquivo = escolherArquivo();

            if (endArquivo == null || endArquivo == "erro") {
                JOptionPane.showMessageDialog(this, "Arquivo inválido !", "Erro", JOptionPane.ERROR_MESSAGE);
            } else {
                Runtime.getRuntime().exec("cmd /c start " + endArquivo);
                JOptionPane.showMessageDialog(this, "Simulação rodando !", "Simulação em andamento", JOptionPane.INFORMATION_MESSAGE);
                System.out.println("Rodou");
            }

        } catch (IOException e) {
            System.out.println("Erro: " + e.getMessage());
            JOptionPane.showMessageDialog(this, "Erro ao rodar simulação !", "Erro", JOptionPane.ERROR_MESSAGE);
        }


    }//GEN-LAST:event_btnExecutarActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // TODO add your handling code here:
        preencherTabela();
        txtEndProjeto.setFocusable(true);
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimparActionPerformed
        // TODO add your handling code here:
        limpar();
    }//GEN-LAST:event_btnLimparActionPerformed

    private void btnExcolherPastaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcolherPastaActionPerformed
        // TODO add your handling code here:
        escolherPastaProjeto();
    }//GEN-LAST:event_btnExcolherPastaActionPerformed

    private void btnUpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpActionPerformed
        // TODO add your handling code here:
        up();
    }//GEN-LAST:event_btnUpActionPerformed

    private void btnDownActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDownActionPerformed
        // TODO add your handling code here:
        down();
    }//GEN-LAST:event_btnDownActionPerformed

    private void btnExcolherPasta1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcolherPasta1ActionPerformed
        // TODO add your handling code here:
        escolherPastaSave();
    }//GEN-LAST:event_btnExcolherPasta1ActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(this, "Desenvolvido por Lucas Waiteman Bastos \n Setor: EPC \n Email: Tracuns@gmail.com", "Sobre", JOptionPane.INFORMATION_MESSAGE);

    }//GEN-LAST:event_jMenuItem1ActionPerformed

    void salvar(){

        criarLinha();

        try {

            if (comand.save(this.linhaComando, txtLocalSalvar.getText(), tabela.getValueAt(0, 0).toString())) {
                JOptionPane.showMessageDialog(this, "Arquivo criado !", "Sucesso", JOptionPane.INFORMATION_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(this, "Erro ao criar arquivo !" , "Erro", JOptionPane.ERROR_MESSAGE);
            }
        } catch (IOException e) {
            JOptionPane.showMessageDialog(this, "Erro: " + e.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
        }

        if (cbDump.isSelected()) {
            criarLinhaDump();

            try {

                if (comand.save(this.linhaComandoDump, txtLocalSalvar.getText(), tabela.getValueAt(0, 0).toString())) {
                    JOptionPane.showMessageDialog(this, "Arquivo Dump criado !", "Sucesso", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(this, "Erro ao criar arquivo Dump !", "Erro", JOptionPane.ERROR_MESSAGE);
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Erro: " + e.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
            }
        }
    }

    //Move a selecao para a linha de cima
    void up() {
        //Indice da selecao
        int atual = tabela.getSelectedRow();
        int anterior = atual - 1;

        if (atual <= 0) {

            JOptionPane.showMessageDialog(this, "Impossível mover para cima !", "Seleção inválida", JOptionPane.ERROR_MESSAGE);

        } else {

            String aux = (String) tabela.getValueAt(anterior, 0);
            tabela.setValueAt(tabela.getValueAt(atual, 0), anterior, 0);
            tabela.setValueAt(aux, atual, 0);
        }
    }

    //Move a selecao para a linha de baixo
    void down() {
        //Indice da selecao
        int atual = tabela.getSelectedRow();
        int proxima = atual + 1;

        if (proxima >= this.count || atual < 0) {

            JOptionPane.showMessageDialog(this, "Impossível mover para baixo !", "Seleção inválida", JOptionPane.ERROR_MESSAGE);

        } else {

            String aux = (String) tabela.getValueAt(proxima, 0);
            tabela.setValueAt(tabela.getValueAt(atual, 0), proxima, 0);
            tabela.setValueAt(aux, atual, 0);
        }
    }

    void escolherPastaProjeto() {

        JFileChooser file = new JFileChooser(this.endMagmaProjeto);
        file.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        int i = file.showOpenDialog(null);

        if (i == 0) {

            File arquivo = file.getSelectedFile();
            //JOptionPane.showMessageDialog(this, arquivo.toString());

            txtEndProjeto.setText(arquivo.toString());
        }
    }

    String escolherArquivo() {

        JFileChooser file = new JFileChooser(this.endInicial);
        file.setFileSelectionMode(JFileChooser.FILES_ONLY);
        int i = file.showOpenDialog(null);

        if (i == 0) {

            File arquivo = file.getSelectedFile();
            if (!arquivoIsValid(arquivo.getName())) {
                return "erro";
            } else {
                return arquivo.toString();
            }

        }

        return null;
    }

    boolean arquivoIsValid(String nomeArq) {

        StringTokenizer st = new StringTokenizer(nomeArq, ".");
        st.nextToken();

        if (st.nextToken().equalsIgnoreCase("bat")) {
            return true;
        }

        return false;
    }

    void escolherPastaSave() {

        JFileChooser file = new JFileChooser(this.endInicial);
        file.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        int i = file.showOpenDialog(null);

        if (i == 0) {

            File arquivo = file.getSelectedFile();

            txtLocalSalvar.setText(arquivo.toString());
        }
    }

    void preencherTabela() {

        if (txtEndProjeto.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Preencha o endereço do projeto !", "Campo vazio", JOptionPane.ERROR_MESSAGE);
        } else {
            String[] texto = {txtEndProjeto.getText()};
            model.addRow(texto);
            txtEndProjeto.setText("");
            count++;
        }
    }

    void criarLinha() {

        if (this.linhaComando.equals("")) {
            for (int i = 0; i < count; i++) {
                this.linhaComando = this.linhaComando + comand.command(txtEndExeMagma.getText(), String.valueOf(tabela.getValueAt(i, 0)));
            }

            //JOptionPane.showMessageDialog(rootPane, "Linha criada !" + this.linhaComando);
        }
    }

    void criarLinhaDump() {

        if (this.linhaComandoDump == "") {
            for (int i = 0; i < count; i++) {
                this.linhaComandoDump = this.linhaComandoDump + comand.commandDump(txtEndExeMagma.getText(), String.valueOf(tabela.getValueAt(i, 0)));
            }

            //JOptionPane.showMessageDialog(rootPane, "Linha Dump criada !" + this.linhaComandoDump);
        }
    }

    void limpar() {

//        if (tabela.getSelectedRow() != -1) {
//            for (int i = 0; i < (this.count-1); i++) {
//                this.model.removeRow(i);
//            }
//            this.count = 0;
//        }else{
//Arrumar uma forma de excluir todos os dados da tabela quando o usuario apertar o botao
            if(tabela.getSelectedRow() != -1){
                model.removeRow(tabela.getSelectedRow());
                this.count--;
            }
            
//        }

        this.txtEndProjeto.setText("");
        this.linhaComando = "";
        this.linhaComandoDump = "";
        
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Executar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Executar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Executar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Executar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Executar().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnDown;
    private javax.swing.JButton btnExcolherPasta;
    private javax.swing.JButton btnExcolherPasta1;
    private javax.swing.JButton btnExecutar;
    private javax.swing.JButton btnLimpar;
    private javax.swing.JButton btnSalvar;
    private javax.swing.JButton btnUp;
    private javax.swing.JCheckBox cbDump;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tabela;
    private javax.swing.JTextField txtEndExeMagma;
    private javax.swing.JTextField txtEndProjeto;
    private javax.swing.JTextField txtLocalSalvar;
    // End of variables declaration//GEN-END:variables

}
